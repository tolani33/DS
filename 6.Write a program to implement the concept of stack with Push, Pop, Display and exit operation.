#include <stdio.h>
#define MAX 30

int stack[MAX];
int top = -1;

void push();
int pop();
int peek();
void display();

int main() {
    int choice;
    do {
        printf("\n **** Main Menu **** \n");
        printf("1.Push\n");
        printf("2.Pop\n");
        printf("3.Peek\n");
        printf("4.Display\n");
        printf("5.Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        switch (choice) {
            case 1: push(); break;
            case 2: pop(); break;
            case 3: peek(); break;
            case 4: display(); break;
            case 5: break;
            default: printf("Invalid choice. Try again.\n");
        }
    } while (choice != 5);
    return 0;
}

void push() {
    int val;
    if (top == MAX - 1) {
        printf("Stack is full.\n");
    } else {
        printf("Enter the value to be pushed: ");
        scanf("%d", &val);
        stack[++top] = val;
        printf("Successfully pushed.\n");
    }
}

int pop() {
    if (top == -1) {
        printf("Stack is already empty.\n");
        return -1;
    } else {
        int val = stack[top--];
        printf("The value popped: %d\n", val);
        return val;
    }
}

int peek() {
    if (top == -1) {
        printf("Stack is empty.\n");
        return -1;
    } else {
        printf("The topmost element of stack: %d\n", stack[top]);
        return stack[top];
    }
}

void display() {
    if (top == -1) {
        printf("Stack is empty.\n");
    } else {
        printf("Stack: ");
        for (int i = top; i >= 0; i--) {
            printf("%d ", stack[i]);
        }
        printf("\n");
    }
}
